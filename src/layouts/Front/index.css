@import "tailwindcss";
@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@font-face {
    font-family: Bricolage Grotesque;
    font-style: normal;
    font-weight: 200 800;
    font-stretch: 100%;
    font-display: swap;
    src: url(/src/assets/global/fonts/93a6e477e1480c92-s.woff2) format("woff2");
    unicode-range: u+0102-0103, u+0110-0111, u+0128-0129, u+0168-0169, u+01a0-01a1, u+01af-01b0, u+0300-0301, u+0303-0304, u+0308-0309, u+0323, u+0329, u+1ea0-1ef9, u+20ab
}

@font-face {
    font-family: Bricolage Grotesque;
    font-style: normal;
    font-weight: 200 800;
    font-stretch: 100%;
    font-display: swap;
    src: url(/src/assets/global/fonts/c7e0cf6c760983e7-s.woff2) format("woff2");
    unicode-range: u+0100-02ba, u+02bd-02c5, u+02c7-02cc, u+02ce-02d7, u+02dd-02ff, u+0304, u+0308, u+0329, u+1d00-1dbf, u+1e00-1e9f, u+1ef2-1eff, u+2020, u+20a0-20ab, u+20ad-20c0, u+2113, u+2c60-2c7f, u+a720-a7ff
}

@font-face {

    font-family: Bricolage Grotesque;
    font-style: normal;
    font-weight: 200 800;
    font-stretch: 100%;
    font-display: swap;
    src: url(/src/assets/global/fonts/9d5a263311222317-s.p.woff2) format("woff2");
    unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da, u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+20ac, u+2122, u+2191, u+2193, u+2212, u+2215, u+feff, u+fffd
}

@font-face {
    font-family: Bricolage Grotesque Fallback;
    src: local("Arial");
    ascent-override: 88.21%;
    descent-override: 25.61%;
    line-gap-override: 0.00%;
    size-adjust: 105.43%
}

* {
    font-family: 'Bricolage Grotesque', 'Bricolage Grotesque Fallback', sans-serif;
    font-style: normal;
}

@layer base {

    *,
    ::backdrop,
    :after,
    :before {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    :host,
    html {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent
    }

    body {
        line-height: inherit
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px
    }

    abbr: where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit
    }

    b,
    strong {
        font-weight: bolder
    }

    code,
    kbd,
    pre,
    samp {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em
    }

    small {
        font-size: 80%
    }

    sub,
    sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative
    }

    sub {
        bottom: -.25em
    }

    sup {
        top: -.5em
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse
    }

    :-moz-focusring {
        outline: auto
    }

    progress {
        vertical-align: baseline
    }

    summary {
        display: list-item
    }

    menu,
    ol,
    ul {
        list-style: none
    }

    audio,
    canvas,
    embed,
    iframe,
    img,
    object,
    svg,
    video {
        vertical-align: middle;
        display: block
    }

    img,
    video {
        max-width: 100%;
        height: auto
    }

    button,
    input,
    optgroup,
    select,
    textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    :where(select: is([multiple], [size])) optgroup {
        font-weight: bolder
    }

    :where(select: is([multiple], [size])) optgroup option {
        padding-inline-start: 20px
    }

    ::file-selector-button {
        margin-inline-end: 4px
    }

    ::placeholder {
        opacity: 1;
        color: color-mix(in oklab, currentColor 50%, transparent)
    }

    textarea {
        resize: vertical
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit
    }

    ::-webkit-datetime-edit {
        display: inline-flex
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0
    }

    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-month-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-second-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0
    }

    :-moz-ui-invalid {
        box-shadow: none
    }

    button,
    input: where([type=button], [type=reset], [type=submit]) {
        appearance: button
    }

    ::file-selector-button {
        appearance: button
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto
    }

    [hidden]: where(:not([hidden=until-found])) {
        display: none !important
    }
}

@layer components;

@layer utilities {
    .shadow-auth {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a)
    }

    .shadow-auth,
    .shadow-lg {
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a)
    }

    .shadow-none {
        --tw-shadow: 0 0 #0000
    }

    .shadow-none,
    .shadow-xl {
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-xl {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a)
    }

    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .text-dark {
        color: var(--color-dark);
    }

    @media (hover:hover) {
        .hover\:cursor-pointer:hover {
            cursor: pointer
        }

        .hover\:\!bg-primary:hover {
            background-color: var(--color-primary) !important
        }

        .hover\:\!bg-primary\/10:hover {
            background-color: color-mix(in oklab, var(--color-primary)10%, transparent) !important
        }

        .hover\:bg-dark:hover {
            background-color: var(--color-dark)
        }

        .hover\:bg-primary:hover {
            background-color: var(--color-primary)
        }

        .hover\:bg-primary\/10:hover {
            background-color: color-mix(in oklab, var(--color-primary)10%, transparent)
        }

        .hover\:bg-primary\/20:hover {
            background-color: color-mix(in oklab, var(--color-primary)20%, transparent)
        }

        .hover\:bg-primary\/90:hover {
            background-color: color-mix(in oklab, var(--color-primary)90%, transparent)
        }

        .hover\:bg-transparent:hover {
            background-color: #0000
        }

        .hover\:bg-white:hover {
            background-color: var(--color-white)
        }

        .hover\:\!text-white:hover {
            color: var(--color-white) !important
        }

        .hover\:text-dark:hover {
            color: var(--color-dark)
        }

        .hover\:text-primary:hover {
            color: var(--color-primary)
        }

        .hover\:text-white:hover {
            color: var(--color-white)
        }

        .hover\:underline:hover {
            text-decoration-line: underline
        }

        .hover\:shadow-3xl:hover {
            --tw-shadow: 0px 4px 6px -2px var(--tw-shadow-color, #0000000d), 0px 10px 15px -3px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
    }
}

.dark\:block:where(.dark, .dark *) {
    display: block;
}

.dark\:hidden:where(.dark, .dark *) {
    display: none;
}

.dark\:bg-black:where(.dark, .dark *) {
    background-color: var(--color-black);
}

.dark\:bg-dark:where(.dark, .dark *) {
    background-color: var(--color-dark);
}

.dark\:bg-white:where(.dark, .dark *) {
    background-color: var(--color-white);
}

.dark\:text-dark:where(.dark, .dark *) {
    color: var(--color-dark);
}

section {
    padding-block: calc(var(--spacing)* 24);
}

#nprogress .bar {
    background: var(--color-primary);
}

.dark\:text-white:where(.dark, .dark *) {
    color: var(--color-white)
}

.dark\:text-white\/50:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-white)50%, transparent)
}

.dark\:text-white\/75:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-white)75%, transparent)
}

.dark\:text-white\/90:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-white)90%, transparent)
}

.dark\:block:where(.dark, .dark *) {
    display: block
}

.dark\:hidden:where(.dark, .dark *) {
    display: none
}

.dark\:border-dark:where(.dark, .dark *) {
    border-color: var(--color-dark)
}

.dark\:border-white:where(.dark, .dark *) {
    border-color: var(--color-white)
}

.dark\:border-white\/10:where(.dark, .dark *) {
    border-color: color-mix(in oklab, var(--color-white)10%, transparent)
}

.dark\:border-white\/15:where(.dark, .dark *) {
    border-color: color-mix(in oklab, var(--color-white)15%, transparent)
}

.dark\:border-white\/20:where(.dark, .dark *) {
    border-color: color-mix(in oklab, var(--color-white)20%, transparent)
}

.dark\:bg-black:where(.dark, .dark *) {
    background-color: var(--color-black)
}

.dark\:bg-dark:where(.dark, .dark *) {
    background-color: var(--color-dark)
}

.dark\:bg-white:where(.dark, .dark *) {
    background-color: var(--color-white)
}

.dark\:bg-white\/5:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-white)5%, transparent)
}

.dark\:bg-white\/10:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-white)10%, transparent)
}

.dark\:bg-white\/15:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-white)15%, transparent)
}

.dark\:bg-white\/20:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-white)20%, transparent)
}

.dark\:via-\[\#4298b0\]:where(.dark, .dark *) {
    --tw-gradient-via: #4298b0;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-via)var(--tw-gradient-via-position), var(--tw-gradient-to)var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops)
}

.dark\:to-black\/10:where(.dark, .dark *) {
    --tw-gradient-to: color-mix(in oklab, var(--color-black)10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
}

.dark\:text-dark:where(.dark, .dark *) {
    color: var(--color-dark)
}

.dark\:text-white:where(.dark, .dark *) {
    color: var(--color-white)
}

.dark\:text-white\/50:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-white)50%, transparent)
}

.dark\:text-white\/75:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-white)75%, transparent)
}

.dark\:text-white\/90:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-white)90%, transparent)
}

.dark\:shadow-dark-auth:where(.dark, .dark *) {
    --tw-shadow: var(--tw-shadow-color, #ffffff1a)0px 12px 28px 0px, var(--tw-shadow-color, #ffffff1a)0px 2px 4px 0px, var(--tw-shadow-color, #ffffff0d)0px 0px 0px 1px inset;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
}

.dark\:shadow-white\/10:where(.dark, .dark *) {
    --tw-shadow-color: color-mix(in oklab, var(--color-white)10%, transparent)
}

.dark\:after\:border-white:where(.dark, .dark *):after {
    content: var(--tw-content);
    border-color: var(--color-white)
}

@media (hover:hover) {
    .dark\:hover\:bg-dark:where(.dark, .dark *):hover {
        background-color: var(--color-dark)
    }

    .dark\:hover\:bg-primary\/10:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--color-primary)10%, transparent)
    }

    .dark\:hover\:bg-transparent:where(.dark, .dark *):hover {
        background-color: #0000
    }

    .dark\:hover\:text-dark:where(.dark, .dark *):hover {
        color: var(--color-dark)
    }

    .dark\:hover\:text-primary:where(.dark, .dark *):hover {
        color: var(--color-primary)
    }

    .dark\:hover\:text-white:where(.dark, .dark *):hover {
        color: var(--color-white)
    }

    .dark\:hover\:shadow-white\/20:where(.dark, .dark *):hover {
        --tw-shadow-color: color-mix(in oklab, var(--color-white)20%, transparent)
    }
}

.dark\:focus\:border-primary:where(.dark, .dark *):focus {
    border-color: var(--color-primary)
}

.\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none
}

.\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0
}

.\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*=size-]) {
    width: calc(var(--spacing)*4);
    height: calc(var(--spacing)*4)
}

.\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state=open]>svg {
    rotate: 180deg
}

@media only screen and (max-width: 560px) {
    section {
        padding-block: calc(var(--spacing)* 5);
    }
}

@keyframes slide {
  0% {
    transform: translate(0);
  }
  to {
    transform: translate(-103%);
  }
}
